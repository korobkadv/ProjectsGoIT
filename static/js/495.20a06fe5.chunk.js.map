{"version":3,"file":"static/js/495.20a06fe5.chunk.js","mappings":"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","sources":["api.js","components/Loader/Loader.js","components/Movies/Movies.styled.js","components/Movies/Movies.js","pages/MoviesPage.js"],"sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'https://api.themoviedb.org/3/movie/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlMGRjNDlhZTViNGU1NjZmOTRiM2Q0YmIyYzRmNzU0MCIsInN1YiI6IjY1YjdjZWJmMGZiMTdmMDE3YjM0ZmE1YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.k8B34-vuhkf17vWcOVLlbZyRATlzvrIuKqvZCYtsF38';\naxios.defaults.headers.post['Content-Type'] = 'application/json';\n\nexport const fetchPopularMovies = async () => {\n  const response = await axios.get(baseURL + 'popular');\n  return response.data;\n};\n\nexport const fetchDetailsMovie = async id => {\n  const response = await axios.get(baseURL + id);\n  return response.data;\n};\n\nexport const fetchCast = async id => {\n  const response = await axios.get(baseURL + id + '/credits');\n  return response.data;\n};\n\nexport const fetchReviews = async id => {\n  const response = await axios.get(baseURL + id + '/reviews');\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/search/movie?query=' + query\n  );\n  return response.data.results;\n};\n","import { LineWave } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <LineWave\n      height=\"200\"\n      width=\"400\"\n      color=\"#242E34\"\n      ariaLabel=\"line-wave-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      firstLineColor=\"\"\n      middleLineColor=\"\"\n      lastLineColor=\"\"\n    />\n  );\n};\n","import { Field as FormikField, Form as FormikForm } from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Field = styled(FormikField)`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://cdn.iconscout.com/icon/free/png-512/free-search-1364-458863.png?f=webp&w=256');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const FoundMoviesList = styled.ul`\n  margin: ${p => p.theme.spacing(3)};\n`;\n\nexport const FoundMoviesItem = styled.li`\n  font-size: 20px;\n  margin: ${p => p.theme.spacing(1)};\n`;\n","import { useState, useEffect } from 'react';\nimport { searchMovies } from 'api';\nimport { Loader } from 'components/Loader/Loader';\nimport { Formik } from 'formik';\nimport {\n  Form,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  Field,\n  FoundMoviesList,\n  FoundMoviesItem,\n} from './Movies.styled';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nexport const Movies = () => {\n  const [foundMovie, setFoundMovie] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [query, setQuery] = useState('');\n  const [params, setParams] = useSearchParams();\n\n  const queryParams = params.get('query') ?? '';\n  const location = useLocation();\n\n  useEffect(() => {\n    if ((query === '') & (queryParams === '')) {\n      setFoundMovie([]);\n      return;\n    }\n\n    async function getMovies() {\n      try {\n        setIsLoading(true);\n\n        const initialMovies = await searchMovies(\n          queryParams !== '' ? queryParams : query\n        );\n        setFoundMovie(initialMovies);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    getMovies();\n  }, [queryParams, query, params]);\n\n  return (\n    <div>\n      <Formik\n        initialValues={{\n          searchInput: queryParams !== '' ? queryParams : '',\n        }}\n        onSubmit={values => {\n          params.set('query', values.searchInput);\n          setParams(params);\n\n          setQuery(values.searchInput);\n        }}\n      >\n        {({ handleChange, values }) => (\n          <Form>\n            <SearchFormButton>\n              <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n            </SearchFormButton>\n\n            <Field\n              name=\"searchInput\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search movies\"\n              value={values.searchInput}\n              onChange={handleChange}\n            />\n          </Form>\n        )}\n      </Formik>\n\n      <FoundMoviesList>\n        {isLoading && <Loader />}\n        {foundMovie.length\n          ? foundMovie.map(movie => (\n              <FoundMoviesItem key={movie.id}>\n                <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </Link>\n              </FoundMoviesItem>\n            ))\n          : query !== '' && 'No movies found'}\n      </FoundMoviesList>\n    </div>\n  );\n};\n","import { Movies } from 'components/Movies/Movies';\n\nexport default function MoviesPage() {\n  return (\n    <div>\n      <Movies />\n    </div>\n  );\n}\n"],"names":["baseURL","axios","fetchPopularMovies","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchDetailsMovie","_ref2","_callee2","id","_context2","_x","fetchCast","_ref3","_callee3","_context3","_x2","fetchReviews","_ref4","_callee4","_context4","_x3","searchMovies","_ref5","_callee5","query","_context5","results","_x4","Loader","_jsx","LineWave","height","width","color","ariaLabel","wrapperStyle","wrapperClass","firstLineColor","middleLineColor","lastLineColor","Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","Field","FormikField","_templateObject2","SearchFormButton","_templateObject3","SearchFormButtonLabel","_templateObject4","FoundMoviesList","_templateObject5","p","theme","spacing","FoundMoviesItem","_templateObject6","Movies","_params$get","_useState","useState","_useState2","_slicedToArray","foundMovie","setFoundMovie","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","setQuery","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","queryParams","get","location","useLocation","useEffect","_getMovies","initialMovies","t0","console","log","finish","getMovies","_jsxs","children","Formik","initialValues","searchInput","onSubmit","values","set","handleChange","name","type","autoComplete","autoFocus","placeholder","value","onChange","length","map","movie","Link","to","concat","state","from","title","MoviesPage"],"sourceRoot":""}